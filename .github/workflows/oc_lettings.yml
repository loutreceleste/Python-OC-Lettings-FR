name: GitHub Actions Integration

on: [push]

jobs:
  build_and_tests:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install Python and dependencies
        run: |
          sudo apt update
          sudo apt install python3-pip
          pip3 install -r requirements.txt
          pip3 install pytest pytest-cov

      - name: Get latest commit hash
        id: git_hash
        run: |
          echo "::set-output name=hash::$(git log -1 --format='%H')"

      - name: Set CUSTOM_TAG
        run: |
          echo "CUSTOM_TAG=$(echo ${{ steps.git_hash.outputs.hash }})" >> $GITHUB_ENV

      - name: Run Tests whit Coverage
        run: pytest

      - name: Run Linting
        run: flake8

  compilation_and_deployment:
    runs-on: ubuntu-latest
    needs: build_and_tests

    env:
      CUSTOM_TAG: ${{ env.CUSTOM_TAG }}

    steps:
      - name: Set up AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-3

      - name: Build and push Docker image to ECR
        run: |
          docker build -t python-oc-lettings-fr:${{ env.CUSTOM_TAG }} -f /home/edward/Documents/Repos/OpenClassRooms/Python-OC-Lettings-FR/Dockerfile .
          aws ecr get-login-password --region eu-west-3 | docker login --username AWS --password-stdin 211125791987.dkr.ecr.eu-west-3.amazonaws.com
          docker push 211125791987.dkr.ecr.eu-west-3.amazonaws.com/oc-lettings-fr:${{ env.CUSTOM_TAG }}
          
      - name: Update ECS Task Definition
        run: |
          task_definition=$(aws ecs describe-task-definition --task-definition lettings-oc-docker --query 'taskDefinition' --output json)
          echo $task_definition > task_definition.json
          sed -i "s|\"image\": \".*\"|\"image\": \"211125791987.dkr.ecr.eu-west-3.amazonaws.com/oc-lettings-fr:$CUSTOM_TAG\"|" task_definition.json
          new_task_definition=$(aws ecs register-task-definition --cli-input-json file://task_definition.json --query 'taskDefinition.taskDefinitionArn' --output json)
